<div class="container">
  <h1> diet dashboard <%=  %></h1>
  <% data_cal = {} %>
  <% data_cal_ref = {} %>
  <% line_data_cal = [] %>

<!-- plot calories -->
  <% @programs.each do |program| %>
    <%= link_to "See meals", program_meals_path(program) %>
    <% program.meals.group_by(&:start_time).each do |day, meals| %>

      <% data_cal[day.strftime("%d/%m/%Y")] = meals.map{|meal| calorie(meal)}.sum %>
      <% data_cal_ref[day.strftime("%d/%m/%Y")] = program.calorie_target %>

    <% end %>
  <% end %>

  <% data_cal = data_cal.sort_by { |k,_| Date.strptime(k,"%d/%m/%Y") } %>
  <% data_cal_deux = {} %>

  <% data_cal.each do |day,meal| %>
  <% data_cal_deux[day] = meal  %>
  <% end %>

  <% data_cal_ref = data_cal_ref.sort_by { |k,_| Date.strptime(k,"%d/%m/%Y") } %>
  <% data_cal_ref_deux = {} %>

  <% data_cal_ref.each do |day,meal| %>
  <% data_cal_ref_deux[day] = meal  %>
  <% end %>


  <div class = "meal-graph">
    <canvas id="calorie"></canvas>
    <script>
      new Chart(document.getElementById("calorie").getContext("2d"), {
        type:'line',
        data:{
          labels: <%= data_cal_deux.keys.to_json.html_safe %>,
          datasets: [{
            label: "Calories",
            data: <%= data_cal_deux.values.to_json.html_safe %>,
            fill:  true,
            backgroundColor: ['rgba(186, 0, 251,0.2)'],
            borderColor: ['rgba(186, 0, 251,1)'],
            },{
            label: "Goal",
            data: <%= data_cal_ref_deux.values.to_json.html_safe %>,
            fill:  false,
            borderDash: [5, 5],
            pointRadius: 0
          }],
        },
        options: {
          legend: {
            display: true,
            position: 'right',
            labels: {
                fontColor: 'rgba(0, 0, 0,1)'
            }
          },
          responsive: true,
          title:{
              display: true,
              text:"Calories"
          },
          scales:{
            xAxes: [{
              type: 'time',
              //
              time: {
              parser: 'DD/MM/YYYY',
              tooltipFormat: 'DD/MM/YYYY',
              unit: 'day',
              unitStepSize: 1,
              displayFormats: {
                'day': 'DD/MM/YYYY'
                }
              },
              ticks: {
                autoSkip: true,
                maxTicksLimit: 20
              }
            }], // XAxes ends
            yAxes: [{
                scaleLabel: {
                  display: true,
                  labelString: 'value'
                }
            }]
          }
        }
    });

</script>

  </div>


<!-- plot macro -->
  <% data_p = {} %>
  <% data_l = {} %>
  <% data_c = {} %>

  <% @programs.each do |program| %>
    <% program.meals.group_by(&:start_time).each do |day, meals| %>

      <% sum_p = 0 %>
      <% sum_c = 0 %>
      <% sum_l = 0 %>
      <% data_p[day.strftime("%d/%m/%Y")] = meals.map{|meal| meal.proteins}.sum %>
      <% data_l[day.strftime("%d/%m/%Y")] = meals.map{|meal| meal.fats}.sum %>
      <% data_c[day.strftime("%d/%m/%Y")] = meals.map{|meal| meal.carbs}.sum  %>
    <% end %>

    <!-- proteins -->
    <% data_p = data_p.sort_by { |k,_| Date.strptime(k,"%d/%m/%Y") } %>
    <% data_p_deux = {} %>

    <% data_p.each do |day,meal| %>
      <% data_p_deux[day] = meal  %>
    <% end %>

    <!-- fats -->
    <% data_l = data_l.sort_by { |k,_| Date.strptime(k,"%d/%m/%Y") } %>
    <% data_l_deux = {} %>

    <% data_l.each do |day,meal| %>
      <% data_l_deux[day] = meal  %>
    <% end %>

    <!-- carbs -->
    <% data_c = data_c.sort_by { |k,_| Date.strptime(k,"%d/%m/%Y") } %>
    <% data_c_deux = {} %>

    <% data_c.each do |day,meal| %>
      <% data_c_deux[day] = meal  %>
    <% end %>

  <div class="macrograph">
    <canvas style = "  background-color: white;" id = "proteins" > </canvas>
    <canvas style = "  background-color: white;" id = "carbs"> </canvas>
    <canvas style = "  background-color: white;" id = "fats" > </canvas>
  </div>

    <script>
     new Chart(document.getElementById("proteins").getContext("2d"), {
        type:'line',
        data:{
          labels: <%= data_p_deux.keys.to_json.html_safe %>,
          datasets: [{
            label: "Proteins",
            data: <%= data_p_deux.values.to_json.html_safe %>,
            fill:  true,
            borderColor: ['rgba(251, 19, 0, 1)'],
            backgroundColor: ['rgba(251, 19, 0, 0.2)'],
            },{
            label: "Goal",
            data: <%= data_p_deux.map { |day,value| [day, program.proteins_target]}.to_h.values %>,
            fill:  false,
            borderColor: ['rgba(0, 0, 0, 0.4)'],
            borderDash: [5, 5],
                pointRadius: 0
          }],
        },
        options: {
          legend: {
            display: true,
            position: 'bottom',
            labels: {
                fontColor: 'rgba(0, 0, 0,1)'
            }
          },
          maintainAspectRatio:false,
          responsive: true,
          title:{
              display: true,
              text:"Proteins"
          },
          scales:{
            xAxes: [{
              type: 'time',
              //
              time: {
              parser: 'DD/MM/YYYY',
              tooltipFormat: 'DD/MM/YYYY',
              unit: 'day',
              unitStepSize: 1,
              displayFormats: {
                'day': 'DD/MM/YYYY'
                }
              },
              ticks: {
                autoSkip: true,
                maxTicksLimit: 20
              }
            }], // XAxes ends
            yAxes: [{
                scaleLabel: {
                  display: false,
                  labelString: 'value'
                }
            }]
          }
        }
    });

    new Chart(document.getElementById("fats").getContext("2d"), {
        type:'line',
        data:{
          labels: <%= data_l_deux.keys.to_json.html_safe %>,
          datasets: [{
            label: "Fats",
            data: <%= data_l_deux.values.to_json.html_safe %>,
            fill:  true,
            borderColor: ['rgba(251, 240, 0, 1)'],
            backgroundColor: ['rgba(251, 240, 0, 0.4)'],
            },{
            label: "Goal",
            data: <%= data_l_deux.map { |day,value| [day, program.fats_target]}.to_h.values %>,
            fill:  false,
            borderColor: ['rgba(0, 0, 0, 0.4)'],
            borderDash: [5, 5],
            pointRadius: 0
          }],
        },
        options: {
          legend: {
            display: true,
            position: 'bottom',
            labels: {
                fontColor: 'rgba(0, 0, 0,1)'
            }
          },
          maintainAspectRatio:false,
          responsive: true,
          title:{
              display: true,
              text:"Fats"
          },
          scales:{
            xAxes: [{
              type: 'time',
              //
              time: {
              parser: 'DD/MM/YYYY',
              tooltipFormat: 'DD/MM/YYYY',
              unit: 'day',
              unitStepSize: 1,
              displayFormats: {
                'day': 'DD/MM/YYYY'
                }
              },
              ticks: {
                autoSkip: true,
                maxTicksLimit: 20
              }
            }], // XAxes ends
            yAxes: [{
                scaleLabel: {
                  display: false,
                  labelString: 'value'
                }
            }]
          }
        }
    });

    new Chart(document.getElementById("carbs").getContext("2d"), {
        type:'line',
        data:{
          labels: <%= data_c_deux.keys.to_json.html_safe %>,
          datasets: [{
            label: "Carbs",
            data: <%= data_c_deux.values.to_json.html_safe %>,
            fill:  true,
            borderColor: ['rgba(0, 221, 251, 1)'],
            backgroundColor: ['rgba(0, 221, 251, 0.2)'],
            },{
            label: "Goal",
            data: <%= data_c_deux.map { |day,value| [day, program.carbs_target]}.to_h.values %>,
            fill:  false,
            borderColor: ['rgba(0, 0, 0, 0.4)'],
            borderDash: [5, 5],
            pointRadius: 0
          }],
        },
        options: {
            legend: {
            display: true,
            position: 'bottom',
            labels: {
                fontColor: 'rgba(0, 0, 0,1)'
            }
          },
          maintainAspectRatio:false,
          responsive: true,
          title:{
              display: true,
              text:"Carbs"
          },
          scales:{
            xAxes: [{
              type: 'time',
              //
              time: {
              parser: 'DD/MM/YYYY',
              tooltipFormat: 'DD/MM/YYYY',
              unit: 'day',
              unitStepSize: 1,
              displayFormats: {
                'day': 'DD/MM/YYYY'
                }
              },
              ticks: {
                autoSkip: true,
                maxTicksLimit: 20
              }
            }], // XAxes ends
            yAxes: [{
                scaleLabel: {
                  display: false,
                  labelString: 'value'
                }
            }]
          }
        }
    });
    </script>

  <% end %>


<!-- Table -->
  <% @programs.each do |program| %>
    <% sum_p = sum_c =sum_l = sum_c = sum_cal = 0 %>
        <table class = "nutri-table-meal">
            <thead>
              <tr>
                <th style="background-color: rgba(245, 243, 242, 0.4) ;border-radius: 25px"> Date </th>
                <th style="background-color: rgba(251, 19, 0, 0.4) ;border-radius: 25px"> Protein</th>
                <th style="background-color: rgba(251, 240, 0, 0.4) ;border-radius: 25px"> Fats</th>
                <th style="background-color: rgba(0, 221, 251, 0.4) ;border-radius: 25px"> Carbs</th>
                <th style="background-color: rgba(186, 0, 251,0.4) ;border-radius: 25px"> Calories</th>
              </tr>
            </thead>
          <tbody>
          <% program.meals.group_by(&:start_time).each do |day, meals| %>
          <% col_protein = pickcolor(meals.map{|meal| meal.proteins}.sum(), program.proteins_target) %>
          <% col_fats = pickcolor(meals.map{|meal| meal.fats}.sum(), program.fats_target) %>
          <% col_carbs = pickcolor(meals.map{|meal| meal.carbs}.sum(), program.carbs_target) %>
          <% col_calorie = pickcolor(meals.map{|meal| calorie(meal)}.sum(), program.calorie_target) %>
            <tr>
              <td> <%= link_to meals.last.start_time.strftime("%d/%m/%Y"), program_meals_path(program, date:meals.last.start_time) %>  </td>
              <td style="color: <%= col_protein %>;font-size:16px;font-weight: bold;" > <%= meals.map{|meal| meal.proteins}.sum() %> </td>
              <td style="color: <%= col_protein %>;font-size:16px;font-weight: bold;" > <%= meals.map{|meal| meal.fats}.sum() %> </td>
              <td style="color: <%= col_protein %>;font-size:16px;font-weight: bold;" > <%= meals.map{|meal| meal.carbs}.sum() %> </td>
              <td style="color: <%= col_protein %>;font-size:16px;font-weight: bold;" > <%= meals.map{|meal| calorie(meal)}.sum() %> </td>
              <% sum_p = sum_c =sum_l = sum_c = sum_cal = 0 %>
            </tr>
          <% end %>
        </tbody>
      </table>
  <% end %>

</div>
