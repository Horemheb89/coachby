<div class="container">
  <h1 class = page-title> diet dashboard <i class="fas fa-chart-line"></i> </h1>

  <% data_cal = {} %>
  <% data_cal_ref = {} %>


  <% @programs.each do |program| %>
    <% sum_p = sum_c =sum_l = sum_c = sum_cal = 0 %>
    <% program.meals.group_by(&:start_time).each do |day, meals| %>
      <% data_cal[day.strftime("%d/%m/%Y")] = meals.map{|meal| calorie(meal)}.sum %>
      <% data_cal_ref[day.strftime("%d/%m/%Y")] = program.calorie_target %>
    <% end %>
  <% end %>



  <% data_cal = data_cal.sort_by { |k,_| Date.strptime(k,"%d/%m/%Y") } %>
  <% data_cal_deux = {} %>

  <% data_cal.each do |day,meal| %>
  <% data_cal_deux[day] = meal  %>
  <% end %>

  <% data_cal_ref = data_cal_ref.sort_by { |k,_| Date.strptime(k,"%d/%m/%Y") } %>
  <% data_cal_ref_deux = {} %>

  <% data_cal_ref.each do |day,meal| %>
  <% data_cal_ref_deux[day] = meal  %>
  <% end %>

  <div class = "meal-graph">
    <canvas id="calorie"></canvas>

      <script>
        Chart.defaults.global.title.display = false;
        Chart.defaults.global.title.fontSize = 16;
        new Chart(document.getElementById("calorie").getContext("2d"), {
          type:'line',
          data:{
            labels: <%= data_cal_deux.keys.to_json.html_safe %>,
            datasets: [{
              label: "Calories",
              data: <%= data_cal_deux.values.to_json.html_safe %>,
              fill:  true,
              backgroundColor: ['rgba(186, 0, 251,0.2)'],
              borderColor: ['rgba(186, 0, 251,1)'],
              steppedLine: true
              },{
              label: "Goal",
              lineTension: 0,
              data: <%= data_cal_ref_deux.values.to_json.html_safe %>,
              fill:  true,
              borderColor: ['rgba(0, 0, 0, 0.4)'],
              steppedLine: true,
              borderDash: [5, 5],
              pointRadius: 0
            }],
          },
          options: {
            legend: {
              display: true,
              position: 'right',
              labels: {
                fontColor: 'rgba(0, 0, 0,1)',
                fontSize : 12,
              }
            },
            responsive: true,
            title:{
                display: true,
                text:"Calories"
            },
            scales:{
              xAxes: [{
                type: 'time',
                //
                time: {
                parser: 'DD/MM/YYYY',
                tooltipFormat: 'DD/MM/YYYY',
                unit: 'day',
                unitStepSize: 1,
                displayFormats: {
                  'day': 'DD/MM'
                  }
                },
                ticks: {
                  autoSkip: true,
                  maxTicksLimit: 20,
                  beginAtZero: true,
                }
              }], // XAxes ends
              yAxes: [{
                  scaleLabel: {
                    display: false,
                    labelString: 'value'
                  },
                  ticks: {
                  min: 0
                }
              }]
            }
          }
      });
    </script>

  </div>


<!-- plot macro -->

  <% data_p = {} %>
  <% data_l = {} %>
  <% data_c = {} %>

<!-- create my macro/date object -->
  <% @programs.each do |program| %>
    <% program.meals.group_by(&:start_time).each do |day, meals| %>
      <% data_p[day] = meals.map{|meal| meal.proteins}.sum %>
      <% data_l[day] = meals.map{|meal| meal.fats}.sum %>
      <% data_c[day] = meals.map{|meal| meal.carbs}.sum  %>
    <% end %>
  <% end %>


  <% data_p_ref = {} %>
  <% data_l_ref = {} %>
  <% data_c_ref = {} %>

  <!-- create my reference/date object -->
  <% @programs.each do |program| %>
    <% program.meals.group_by(&:start_time).each do |day, meals| %>
      <% data_p_ref[day] = program.proteins_target %>
      <% data_l_ref[day] = program.fats_target %>
      <% data_c_ref[day] = program.carbs_target %>
    <% end %>
  <% end %>


  <% max_scale = [data_p.map {|array| array[1]}.max,
                  data_l.map {|array| array[1]}.max,
                  data_c.map {|array| array[1]}.max,
                  data_p_ref.map {|array| array[1]}.max,
                  data_l_ref.map {|array| array[1]}.max,
                  data_c_ref.map {|array| array[1]}.max].max.round(-2) + 100  %>


<!-- on sort par les dates -->

    <div class="macrograph">
      <div class="meal-graph_macro">
        <canvas id = "proteins" > </canvas>
      </div>
      <div class="meal-graph_macro">
        <canvas id = "carbs"> </canvas>
      </div>
      <div class="meal-graph_macro">
        <canvas id = "fats" > </canvas>
      </div>
    </div>

  <% sorted_p_dates = data_p.keys.sort %>
  <% sorted_l_dates = data_l.keys.sort %>
  <% sorted_c_dates = data_c.keys.sort %>


  <script>

    Chart.defaults.global.title.display = false;
    Chart.defaults.global.title.fontSize = 16;


   new Chart(document.getElementById("proteins").getContext("2d"), {
      type:'line',
      data:{
        labels: <%= sorted_p_dates.map {|date| date.strftime("%d/%m/%Y") }.to_json.html_safe %>,
        datasets: [{
          label: "Proteins",
          data: <%= sorted_p_dates.map {|date| data_p[date]} %>,
          fill:  true,
          borderColor: ['rgba(251, 19, 0, 1)'],
          backgroundColor: ['rgba(251, 19, 0, 0.2)'],
          steppedLine: true,
          },{
          label: "Goal",
          lineTension: 0,
          data: <%= data_p_ref.values.to_json.html_safe %>,
          fill:  true,
          borderColor: ['rgba(0, 0, 0, 0.4)'],
          steppedLine: true,
          borderDash: [5, 5],
          pointRadius: 0
        }],
      },
      options: {
        legend: {
          display: false,
          position: 'bottom',
          labels: {
              fontColor: 'rgba(0, 0, 0,1)'
          }
        },
        maintainAspectRatio:false,
        responsive: true,
        title:{
            display: true,
            text:"Proteins"
        },
        scales:{
          xAxes: [{
            type: 'time',
            //
            time: {
            parser: 'DD/MM/YYYY',
            tooltipFormat: 'DD/MM/YYYY',
            unit: 'day',
            unitStepSize: 1,
            displayFormats: {
              'day': 'DD/MM'
              }
            },
            ticks: {
              autoSkip: true,
              maxTicksLimit: 20
            }
          }], // XAxes ends
          yAxes: [{
              scaleLabel: {
                display: true,
                labelString: 'Mass (Gr)'
              },
              ticks: {
                max: <%=  max_scale %>,
                min: 0,
              }
          }]
        }
      }
  });

    new Chart(document.getElementById("carbs").getContext("2d"), {
      type:'line',
      data:{
        labels: <%= sorted_c_dates.map {|date| date.strftime("%d/%m/%Y") }.to_json.html_safe %>,
        datasets: [{
          label: "Carbs",
          data: <%= sorted_c_dates.map {|date| data_c[date]} %>,
          fill:  true,
          borderColor: ['rgba(0, 221, 251, 1)'],
          backgroundColor: ['rgba(0, 221, 251, 0.2)'],
          steppedLine: true,
          },{
          label: "Goal",
          lineTension: 0,
          data: <%= data_c_ref.values.to_json.html_safe %>,
          fill:  true,
          borderColor: ['rgba(0, 0, 0, 0.4)'],
          steppedLine: true,
          borderDash: [5, 5],
              pointRadius: 0
        }],
      },
      options: {
        legend: {
          display: false,
          position: 'bottom',
          labels: {
              fontColor: 'rgba(0, 0, 0,1)'
          }
        },
        maintainAspectRatio:false,
        responsive: true,
        title:{
            display: true,
            text:"Carbs"
        },
        scales:{
          xAxes: [{
            type: 'time',
            //
            time: {
            parser: 'DD/MM/YYYY',
            tooltipFormat: 'DD/MM/YYYY',
            unit: 'day',
            unitStepSize: 1,
            displayFormats: {
              'day': 'DD/MM'
              }
            },
            ticks: {
              autoSkip: true,
              maxTicksLimit: 20
            }
          }], // XAxes ends
          yAxes: [{
              scaleLabel: {
                display: true,
                labelString: ''
              },
              ticks: {
                max: <%=  max_scale %>,
                min: 0,
              }
          }]
        }
      }
  });

  new Chart(document.getElementById("fats").getContext("2d"), {
      type:'line',
      data:{
        labels: <%= sorted_l_dates.map {|date| date.strftime("%d/%m/%Y") }.to_json.html_safe %>,
        datasets: [{
          label: "Fats",
          data: <%= sorted_l_dates.map {|date| data_p[date]} %>,
          fill:  true,
          borderColor: ['rgba(251, 240, 0, 1)'],
          backgroundColor: ['rgba(251, 240, 0, 0.4)'],
          steppedLine: true,
          },{
          label: "Goal",
          lineTension: 0,
          data: <%= data_l_ref.values.to_json.html_safe %>,
          fill:  true,
          borderColor: ['rgba(0, 0, 0, 0.4)'],
          steppedLine: true,
          borderDash: [5, 5],
              pointRadius: 0
        }],
      },
      options: {
        legend: {
          display: false,
          position: 'bottom',
          labels: {
            fontColor: 'rgba(0, 0, 0,1)'
          }
        },
        maintainAspectRatio:false,
        responsive: true,
        title:{
            display: true,
            text:"Fats"
        },
        scales:{
          xAxes: [{
            type: 'time',
            //
            time: {
            parser: 'DD/MM/YYYY',
            tooltipFormat: 'DD/MM/YYYY',
            unit: 'day',
            unitStepSize: 1,
            displayFormats: {
              'day': 'DD/MM'
              }
            },
            ticks: {
              autoSkip: true,
              maxTicksLimit: 20
            }
          }], // XAxes ends
          yAxes: [{
              scaleLabel: {
                display: true,
                labelString: ''
              },
              ticks: {
                max: <%=  max_scale %>,
                min: 0,
              }
          }]
        }
      }
  });

  </script>


<!-- Table -->
  <div class = "table-nutri">

    <% @programs.each do |program| %>
    <% sum_p = sum_c =sum_l = sum_c = sum_cal = 0 %>
        <table class = "nutri-table-meal">
          <thead>
            <tr>
              <th> <p></p>  </th>
              <th> <div class = "header"> <p style="background-color: rgba(251, 19, 0, 0.4) ;border-radius: 25px">Proteins</p>  <span> <%= (program.proteins_target * 0.8).to_i %> - <%= (program.proteins_target* 1.2).to_i %></span></div>  </th>
              <th> <div class = "header"> <p style="background-color: rgba(251, 240, 0, 0.4) ;border-radius: 25px">Fats</p>  <span> <%= (program.fats_target * 0.8).to_i %> - <%= (program.fats_target* 1.2).to_i %></span></div>  </th>
              <th> <div class = "header"> <p style="background-color: rgba(0, 221, 251, 0.4) ;border-radius: 25px">Carbs</p>  <span> <%= (program.carbs_target * 0.8).to_i %> - <%= (program.carbs_target* 1.2).to_i %></span></div>  </th>
              <th> <div class = "header"> <p style="background-color: rgba(186, 0, 251,0.4) ;border-radius: 25px">Calories</p>  <span> <%= (program.calorie_target * 0.8).to_i %> - <%= (program.calorie_target* 1.2).to_i %></span></div>  </th>
            </tr>
          </thead>
        <tbody>
          <% program.meals.group_by(&:start_time).each do |day, meals| %>
            <% col_protein = pickcolor(meals.map{|meal| meal.proteins}.sum(), program.proteins_target) %>
            <% col_fats = pickcolor(meals.map{|meal| meal.fats}.sum(), program.fats_target) %>
            <% col_carbs = pickcolor(meals.map{|meal| meal.carbs}.sum(), program.carbs_target) %>
            <% col_calorie = pickcolor(meals.map{|meal| calorie(meal)}.sum(), program.calorie_target) %>
          <tr>
            <td> <%= link_to meals.last.start_time.strftime("%d/%m/%Y"), program_meals_path(program, date:meals.last.start_time) %> </td>
            <td> <p style="color: <%= col_protein %>;font-size:16px;font-weight: bold;">  <%= meals.map{|meal| meal.proteins}.sum() %> </p> </td>
            <td> <p style="color: <%= col_fats %>;font-size:16px;font-weight: bold;">  <%= meals.map{|meal| meal.fats}.sum() %> </p> </td>
            <td> <p style="color: <%= col_carbs %>;font-size:16px;font-weight: bold;">  <%= meals.map{|meal| meal.carbs}.sum() %> </p> </td>
            <td> <p style="color: <%= col_calorie %>;font-size:16px;font-weight: bold;">  <%= meals.map{|meal| calorie(meal)}.sum() %> </p> </td>
            <% sum_p = sum_c =sum_l = sum_c = sum_cal = 0 %>
          </tr>
        <% end %>
        </tbody>
      </table>
  <% end %>


  </div>





</div>
